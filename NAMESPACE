# Generated by roxygen2: do not edit by hand

S3method(check_contacts,contacts)
S3method(filter,sites)
S3method(get_contacts,default)
S3method(get_contacts,numeric)
S3method(get_datasets,default)
S3method(get_datasets,numeric)
S3method(get_datasets,sites)
S3method(get_downloads,numeric)
S3method(get_downloads,sites)
S3method(get_publications,default)
S3method(get_publications,numeric)
S3method(get_publications,publication)
S3method(get_publications,publications)
S3method(get_sites,default)
S3method(get_sites,numeric)
S3method(getids,sites)
export("%>%")
export(check_contacts)
export(cleanNULL)
export(coordinates)
export(doi)
export(filter)
export(fix_null)
export(get_contacts)
export(get_datasets)
export(get_downloads)
export(get_publications)
export(get_sites)
export(get_table)
export(getids)
export(pager)
export(parseURL)
export(plotLeaflet)
export(selectMatch)
export(set_publications)
export(set_site)
export(showDatasets)
export(showMatch)
export(testNull)
export(use_na)
exportClasses(author)
exportClasses(authors)
exportClasses(publication)
exportClasses(publications)
exportMethods("$")
exportMethods("[[")
exportMethods("[[<-")
exportMethods(as.data.frame)
exportMethods(c)
exportMethods(coordinates)
exportMethods(doi)
exportMethods(length)
exportMethods(names)
exportMethods(plot)
exportMethods(plotLeaflet)
exportMethods(selectMatch)
exportMethods(show)
exportMethods(showDatasets)
exportMethods(showMatch)
exportMethods(summary)
exportMethods(write.csv)
import(arulesViz)
import(dplyr)
import(gtools)
import(leaflet)
import(lubridate)
import(mapview)
import(purrr)
import(sf)
import(stringr)
importFrom(assertthat,assert_that)
importFrom(dplyr,arrange)
importFrom(dplyr,bind_cols)
importFrom(dplyr,bind_rows)
importFrom(dplyr,coalesce)
importFrom(httr,GET)
importFrom(httr,add_headers)
importFrom(httr,content)
importFrom(httr,stop_for_status)
importFrom(jsonlite,fromJSON)
importFrom(magrittr,"%>%")
importFrom(methods,new)
importFrom(methods,slot)
importFrom(methods,slotNames)
importFrom(purrr,map)
importFrom(purrr,pluck)
importFrom(utils,write.csv)
